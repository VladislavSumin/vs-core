public abstract class ru/vladislavsumin/core/decompose/components/Component : com/arkivanov/decompose/ComponentContext {
	public fun <init> (Lcom/arkivanov/decompose/ComponentContext;)V
	protected final fun asValue (Lkotlinx/coroutines/flow/StateFlow;)Lcom/arkivanov/decompose/value/Value;
	public fun getBackHandler ()Lcom/arkivanov/essenty/backhandler/BackHandler;
	public fun getComponentContextFactory ()Lcom/arkivanov/decompose/ComponentContextFactory;
	public fun getInstanceKeeper ()Lcom/arkivanov/essenty/instancekeeper/InstanceKeeper;
	public fun getLifecycle ()Lcom/arkivanov/essenty/lifecycle/Lifecycle;
	protected final fun getScope ()Lkotlinx/coroutines/CoroutineScope;
	public fun getStateKeeper ()Lcom/arkivanov/essenty/statekeeper/StateKeeper;
	protected final fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)V
	public static synthetic fun launch$default (Lru/vladislavsumin/core/decompose/components/Component;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	protected fun viewModel (Lkotlin/jvm/functions/Function0;)Lru/vladislavsumin/core/decompose/components/ViewModel;
}

public abstract class ru/vladislavsumin/core/decompose/components/ViewModel {
	public fun <init> ()V
	public final fun getStateKeeper ()Lcom/arkivanov/essenty/statekeeper/StateKeeper;
	protected final fun getViewModelScope ()Lkotlinx/coroutines/CoroutineScope;
	protected final fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)V
	public static synthetic fun launch$default (Lru/vladislavsumin/core/decompose/components/ViewModel;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	protected final fun stateIn (Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlinx/coroutines/flow/SharingStarted;)Lkotlinx/coroutines/flow/StateFlow;
	public static synthetic fun stateIn$default (Lru/vladislavsumin/core/decompose/components/ViewModel;Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlinx/coroutines/flow/SharingStarted;ILjava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;
}

public final class ru/vladislavsumin/core/decompose/components/utils/FlowUtilsKt {
	public static final fun asValue (Lkotlinx/coroutines/flow/StateFlow;Lkotlinx/coroutines/CoroutineScope;)Lcom/arkivanov/decompose/value/Value;
}

public final class ru/vladislavsumin/core/decompose/components/utils/LifecycleCoroutineScopeKt {
	public static final fun createCoroutineScope (Lcom/arkivanov/essenty/lifecycle/Lifecycle;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/CoroutineScope;
	public static synthetic fun createCoroutineScope$default (Lcom/arkivanov/essenty/lifecycle/Lifecycle;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lkotlinx/coroutines/CoroutineScope;
}

