[versions]
vs-core = "NO_VERSION"

# Kotlin
kotlin-core = "2.2.0"
kotlin-ksp = "2.2.0-2.0.2"
kotlin-coroutines = "1.10.2"
kotlin-serialization = "1.9.0"
kotlin-atomicfu = "0.29.0"
kotlin-binaryValidator = "0.18.1"
kotlin-compileTesting = "0.8.0"

# Gradle
gradlePlugins-android = "8.11.0"
gradlePlugins-detekt = "1.23.8"
gradlePlugins-checkUpdates = "0.51.0"
gradlePlugins-mavenPublish = "0.34.0"

# Other
jb-compose = "1.8.2"
decompose = "3.3.0"
kotlinpoet = "2.2.0"
kodein = "7.26.1"

# Logging
logging-log4j = "2.25.1"
logging-slf4j = "2.0.17"

# Testing
testing-mockk = "1.14.5"

[libraries]

# Gradle Plugins
gradlePlugins-kotlin-core = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-core" }
gradlePlugins-kotlin-ksp = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "kotlin-ksp" }
gradlePlugins-kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin-core" }
gradlePlugins-kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "kotlin-atomicfu" }
gradlePlugins-kotlin-compose-compiler = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin-core" }
gradlePlugins-kotlin-binaryValidator = { module = "org.jetbrains.kotlinx:binary-compatibility-validator", version.ref = "kotlin-binaryValidator" }
gradlePlugins-jb-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "jb-compose" }
gradlePlugins-android = { module = "com.android.tools.build:gradle", version.ref = "gradlePlugins-android" }
gradlePlugins-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "gradlePlugins-detekt" }
gradlePlugins-checkUpdates = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradlePlugins-checkUpdates" }
gradlePlugins-mavenPublish = { module = "com.vanniktech.maven.publish:com.vanniktech.maven.publish.gradle.plugin", version.ref = "gradlePlugins-mavenPublish" }

# VS Core
vs-core-collections-tree = { module = "ru.vladislavsumin.core.collections:tree", version.ref = "vs-core" }

vs-core-coroutines-utils = { module = "ru.vladislavsumin.core.coroutines:utils", version.ref = "vs-core" }

vs-core-decompose-components = { module = "ru.vladislavsumin.core.decompose:components", version.ref = "vs-core" }
vs-core-decompose-compose = { module = "ru.vladislavsumin.core.decompose:compose", version.ref = "vs-core" }
vs-core-decompose-test = { module = "ru.vladislavsumin.core.decompose:test", version.ref = "vs-core" }

vs-core-di = { module = "ru.vladislavsumin.core:di", version.ref = "vs-core" }

vs-core-factoryGenerator-api = { module = "ru.vladislavsumin.core.factory-generator:api", version.ref = "vs-core" }
vs-core-factoryGenerator-ksp = { module = "ru.vladislavsumin.core.factory-generator:ksp", version.ref = "vs-core" }

vs-core-ksp-test = { module = "ru.vladislavsumin.core.ksp:test", version.ref = "vs-core" }
vs-core-ksp-utils = { module = "ru.vladislavsumin.core.ksp:utils", version.ref = "vs-core" }

vs-core-logger-api = { module = "ru.vladislavsumin.core.logger:api", version.ref = "vs-core" }
vs-core-logger-manager = { module = "ru.vladislavsumin.core.logger:manager", version.ref = "vs-core" }
vs-core-logger-platform = { module = "ru.vladislavsumin.core.logger:platform", version.ref = "vs-core" }

vs-core-navigation-api = { module = "ru.vladislavsumin.core.navigation:api", version.ref = "vs-core" }
vs-core-navigation-impl = { module = "ru.vladislavsumin.core.navigation:impl", version.ref = "vs-core" }
vs-core-navigation-debug = { module = "ru.vladislavsumin.core.navigation:debug", version.ref = "vs-core" }
vs-core-navigation-di = { module = "ru.vladislavsumin.core.navigation:di", version.ref = "vs-core" }
vs-core-navigation-factoryGenerator-api = { module = "ru.vladislavsumin.core.navigation.factory-generator:api", version.ref = "vs-core" }
vs-core-navigation-factoryGenerator-ksp = { module = "ru.vladislavsumin.core.navigation.factory-generator:ksp", version.ref = "vs-core" }

vs-core-uikit-graph = { module = "ru.vladislavsumin.core.uikit:graph", version.ref = "vs-core" }

# Kotlin
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlin-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlin-serialization" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }
kotlin-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlin-serialization" }
kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlin-atomicfu" }
kotlin-compileTesting-ksp = { module = "dev.zacsweers.kctfork:ksp", version.ref = "kotlin-compileTesting" }

# Decompose
decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
decompose-extensions-composeExperimental = { module = "com.arkivanov.decompose:extensions-compose-experimental", version.ref = "decompose" }
decompose-extensions-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decompose" }

# Kodein
kodein-core = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
kodein-android = { module = "org.kodein.di:kodein-di-framework-android-x", version.ref = "kodein" }

# Code generation
kotlin-ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "kotlin-ksp" }
kotlinpoet-core = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }

# Testing
testing-mockk = { module = "io.mockk:mockk", version.ref = "testing-mockk" }

# Logging
logging-log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "logging-log4j" }
logging-log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "logging-log4j" }
logging-log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "logging-log4j" }
logging-slf4j = { module = "org.slf4j:slf4j-api", version.ref = "logging-slf4j" }

# Other
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "gradlePlugins-detekt" }
